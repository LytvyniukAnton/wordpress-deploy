name: Test on Dev Branch

on:
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/**'
      - 'ansible/**'
      - '.github/workflows/**'
      - 'README.md'

jobs:
  terraform_validate:
    name: "Terraform Validate"
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init with S3 Backend
        id: init
        run: |
          terraform init \
            -backend-config="bucket=my-first-remote-state" \
            -backend-config="key=combined/terraform.tfstate" \
            -backend-config="region=us-east-1" \
            -backend-config="dynamodb_table=terraform-locks"
        working-directory: terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform

  terraform_plan:
    name: "Terraform Plan Check"
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ALLOWED_IPS: ${{ secrets.ALLOWED_IPS }}
      AWS_KEY_NAME: ${{ secrets.AWS_KEY_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Plan
        run: |
          terraform plan \
            -var "allowed_ips=${ALLOWED_IPS}" \
            -var "key_name=${{ env.AWS_KEY_NAME }}"
        working-directory: terraform
        env:
          ALLOWED_IPS: ${{ secrets.ALLOWED_IPS }}
          AWS_KEY_NAME: ${{ secrets.AWS_KEY_NAME }}

  ansible_lint:
    name: "Ansible Lint"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          python3 -m pip install --upgrade pip
          pip3 install ansible ansible-lint

      - name: Run Ansible Lint
        run: ansible-lint ansible/wordpress_deploy.yml

  ssh_runner:
    name: "Temporary SSH Access for Runner"
    runs-on: ubuntu-latest
    needs: [terraform_validate, terraform_plan]
    steps:
      - name: Get runner public IP
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Add runner IP to Security Group
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Remove runner IP from Security Group
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
